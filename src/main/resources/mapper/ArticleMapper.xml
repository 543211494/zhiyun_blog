<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nwpu.blog.mapper.ArticleMapper">
    <!--  映射结果集，id为唯一标识符  -->
    <resultMap id="article" type="org.nwpu.blog.bean.Article">
        <!--    property为java类中的属性名，column为数据库中列名    -->
        <id property="id" column="article_id" jdbcType="INTEGER"></id>
        <result property="authorId" column="article_author_id" jdbcType="INTEGER"></result>
        <result property="title" column="article_title" jdbcType="VARCHAR"></result>
        <result property="content" column="article_content" jdbcType="VARCHAR"></result>
        <result property="updateTime" column="article_update_time" jdbcType="TIMESTAMP"></result>
        <result property="createTime" column="article_create_time" jdbcType="TIMESTAMP"></result>
        <result property="summary" column="article_summary" jdbcType="VARCHAR"></result>
        <result property="thumbnail" column="article_thumbnail" jdbcType="VARCHAR"></result>
        <result property="isVisible" column="article_visible" jdbcType="INTEGER"></result>
        <result property="isDeleted" column="article_deleted" jdbcType="INTEGER"></result>
        <result property="category" column="category_name" jdbcType="VARCHAR"></result>
        <collection property="tags" ofType="org.nwpu.blog.bean.Tag">
            <id property="id" column="tag_id" jdbcType="INTEGER"></id>
            <result property="name" column="tag_name" jdbcType="VARCHAR"></result>
            <result property="updateTime" column="tag_create_time" jdbcType="TIMESTAMP"></result>
            <result property="createTime" column="tag_update_time" jdbcType="TIMESTAMP"></result>
            <result property="isDeleted" column="tag_deleted" jdbcType="INTEGER"></result>
        </collection>
    </resultMap>

    <!--  文章评分  -->
    <resultMap id="score" type="org.nwpu.blog.bean.Score">
        <id property="articleId" column="articleId" jdbcType="INTEGER"></id>
        <result property="count" column="score_count" jdbcType="INTEGER"></result>
        <result property="score" column="score" jdbcType="INTEGER"></result>
    </resultMap>

    <!--  文章阅读量  -->
    <resultMap id="view" type="org.nwpu.blog.bean.View">
        <id property="articleId" column="article_id"></id>
        <result property="date" column="view_date"></result>
        <result property="count" column="view_count"></result>
    </resultMap>

    <!--  文章收藏  -->
    <resultMap id="collection" type="org.nwpu.blog.bean.ArticleCollection">
        <id property="userId" column="user_id" jdbcType="INTEGER"></id>
        <id property="articleId" column="article_id" jdbcType="INTEGER"></id>
        <result property="createTime" column="collection_create_time" jdbcType="TIMESTAMP"></result>
    </resultMap>

    <!--  插入后返回主键  -->
    <insert id="insertArticle" parameterType="org.nwpu.blog.bean.Article" useGeneratedKeys="true" keyProperty="id" keyColumn="article_id">
        INSERT INTO article(article_author_id,article_title,article_content,
                            article_update_time,article_create_time,article_summary,
                            article_thumbnail,article_visible,article_deleted)
        VALUES (#{authorId},#{title},#{content},#{updateTime},#{createTime},#{summary},#{thumbnail},#{isVisible},#{isDeleted})
    </insert>

    <insert id="updateArticleCategory">
        INSERT INTO article_category_ref(article_id,category_id)
        VALUES (#{articleId},#{categoryId})
    </insert>

    <insert id="updateArticleTags">
        INSERT INTO article_tag_ref(article_id,tag_id)
        VALUES
        <foreach collection="tagIds" item="tagId" separator=",">
            (#{articleId},#{tagId})
        </foreach>
    </insert>

    <update id="updateArticle">
        UPDATE article SET article_title = #{article.title}, article_content = #{article.content},
                           article_summary = #{article.summary},article_update_time = #{article.updateTime},
                           article_visible = #{article.isVisible}
        WHERE article_id = #{article.id}
    </update>

    <delete id="deleteArticleCategoryById">
        DELETE FROM article_category_ref WHERE article_id = #{articleId}
    </delete>

    <delete id="deleteArticleTagsById">
        DELETE FROM article_tag_ref WHERE article_id = #{articleId}
    </delete>

    <select id="searchArticleById" resultMap="article">
        SELECT article_id,article_author_id,article_title,article_content,
               article_update_time,article_create_time,article_summary,
               article_thumbnail,article_visible,article_deleted
               <if test="isDetail">
               ,category.category_name category_name,
               tag.tag_id tag_id,tag.tag_name tag_name,tag.tag_create_time tag_create_time,
               tag.tag_update_time tag_update_time,tag.tag_deleted tag_deleted
               </if>
        FROM article<if test="isDetail">,category,tag</if> WHERE article_id = #{articleId}
        <if test="searchDelete">AND article_deleted = 0</if>
        <if test="searchPass">AND article_visible = 1</if>
        <if test="isDetail">
        AND category.category_id IN (SELECT category_id
                                    FROM article_category_ref
                                    WHERE article_id = #{articleId}) AND tag.tag_id IN(SELECT tag_id
                                                                                       FROM article_tag_ref
                                                                                       WHERE article_id = #{articleId})
        </if>
    </select>

    <update id="deleteArticleById">
        UPDATE article SET article_deleted = 1 WHERE article_id = #{articleId}
    </update>

    <update id="updateArticleVisibleById">
        UPDATE article SET article_visible = #{pass} WHERE article_id = #{articleId} AND article_deleted = 0
    </update>

    <insert id="scoreArticle">
        INSERT INTO score(score_user_id,score_article_id,score_number,score_create_time)
        VALUES (#{userId},#{articleId},#{score},now())
        ON DUPLICATE KEY UPDATE
        score_number = VALUES(score_number)
    </insert>

    <insert id="updateThumbnail">
        UPDATE article SET article_thumbnail = #{thumbnail} WHERE article_id = #{articleId}
    </insert>

    <select id="listArticlesByAuthorId" resultMap="article">
        SELECT article_id,article_author_id,article_title,article_content,
               article_update_time,article_create_time,article_summary,
               article_thumbnail,article_visible,article_deleted,
               category.category_name category_name,
               tag.tag_id tag_id,tag.tag_name tag_name,tag.tag_create_time tag_create_time,
               tag.tag_update_time tag_update_time,tag.tag_deleted tag_deleted
        FROM article,category,tag WHERE article_author_id = #{authorId}
                                    AND category.category_id IN (SELECT category_id
                                                                 FROM article_category_ref
                                                                 WHERE article_category_ref.article_id = article.article_id)
                                    AND tag.tag_id IN (SELECT tag_id
                                                       FROM article_tag_ref
                                                       WHERE article_tag_ref.article_id = article.article_id)
                                    AND article_deleted = 0
                                    AND article_visible = 1
        ORDER BY article_id DESC
    </select>

    <select id="listScoresByArticleId" resultMap="score">
        SELECT SUM(score_number) score,COUNT(score_number) score_count,score_article_id articleId
        FROM score
        WHERE score_article_id IN
        (
        <foreach collection="articles" item="article" separator=",">
            #{article.id}
        </foreach>
        )
        GROUP BY score_article_id
        ORDER BY score_article_id DESC
    </select>

<!--    <select id="searchScoreByArticleId" resultMap="score">-->
<!--        SELECT score_article_id articleId,SUM(score_number) score,COUNT(score_number) score_count-->
<!--        FROM score-->
<!--        WHERE score_article_id = #{articleId}-->
<!--    </select>-->

    <select id="listCollectionsByUserId" resultMap="article">
        SELECT article_id,article_author_id,article_title,article_content,
               article_update_time,article_create_time,article_summary,
               article_thumbnail,article_visible,article_deleted,
               category.category_name category_name,
               tag.tag_id tag_id,tag.tag_name tag_name,tag.tag_create_time tag_create_time,
               tag.tag_update_time tag_update_time,tag.tag_deleted tag_deleted
        FROM article,category,tag WHERE article_id IN(SELECT article_id
                                                      FROM collection
                                                      WHERE user_id = #{userId})
                                    AND category.category_id IN (SELECT category_id
                                                                 FROM article_category_ref
                                                                 WHERE article_category_ref.article_id = article.article_id)
                                    AND tag.tag_id IN (SELECT tag_id
                                                       FROM article_tag_ref
                                                       WHERE article_tag_ref.article_id = article.article_id)
                                    AND article_deleted = 0
                                    AND article_visible = 1
        ORDER BY article_id DESC
    </select>

    <select id="listViewsByArticleId" resultMap="view">
        SELECT article_id article_id,SUM(view_count) view_count
        FROM article_view
        WHERE article_id IN
        (
        <foreach collection="articles" item="article" separator=",">
            #{article.id}
        </foreach>
        )
        GROUP BY article_id
        ORDER BY article_id DESC;
    </select>

    <select id="countArticleByAuthorId" resultType="java.lang.Integer">
        SELECT COUNT(article_id)
        FROM article
        WHERE article_author_id = #{authorId} AND article_deleted = 0 AND article_visible = 1
    </select>

    <select id="countViewsByAuthorId" resultType="java.lang.Integer">
        SELECT SUM(view_count)
        FROM article_view
        WHERE article_id IN (SELECT article_id
                             FROM article
                             WHERE article_author_id = #{authorId} AND article_deleted = 0);
    </select>

    <select id="listArticlesByCategory" resultMap="article">
        SELECT article_id,article_author_id,article_title,article_content,
               article_update_time,article_create_time,article_summary,
               article_thumbnail,article_visible,article_deleted,
               category.category_name category_name,
               tag.tag_id tag_id,tag.tag_name tag_name,tag.tag_create_time tag_create_time,
               tag.tag_update_time tag_update_time,tag.tag_deleted tag_deleted
        FROM article,category,tag,(SELECT category_id
                                   FROM category
                                   <if test="category!=null">WHERE category_name LIKE '%${category}%'</if>) AS temp
        WHERE article_id IN (SELECT article_id
                             FROM article_category_ref
                             WHERE category_id = temp.category_id)
          AND category.category_id = temp.category_id
          AND tag.tag_id IN (SELECT tag_id
                             FROM article_tag_ref
                             WHERE article_tag_ref.article_id = article.article_id)
          AND article_deleted = 0
          <if test="isPassed">AND article_visible = 1</if>
          <if test="!isPassed">AND article_visible = 0</if>
        ORDER BY article_id DESC
    </select>

    <select id="listArticlesByTag" resultMap="article">
        SELECT article_id,article_author_id,article_title,article_content,
               article_update_time,article_create_time,article_summary,
               article_thumbnail,article_visible,article_deleted,
               category.category_name category_name,
               tag.tag_id tag_id,tag.tag_name tag_name,tag.tag_create_time tag_create_time,
               tag.tag_update_time tag_update_time,tag.tag_deleted tag_deleted
        FROM article,category,tag,(SELECT tag_id
                                   FROM tag
                                   <if test="tag!=null">WHERE tag.tag_name LIKE '%${tag}%'</if>) AS temp
        WHERE article_id IN (SELECT article_id
                             FROM article_tag_ref
                             WHERE article_tag_ref.tag_id = temp.tag_id)
          AND category.category_id IN (SELECT category_id
                                       FROM article_category_ref
                                       WHERE article_category_ref.article_id = article.article_id)
          AND tag.tag_id IN (SELECT tag_id
                             FROM article_tag_ref
                             WHERE article_tag_ref.article_id = article.article_id)
          AND article_deleted = 0
          <if test="isPassed">AND article_visible = 1</if>
        ORDER BY article_id DESC
    </select>

    <select id="listArticleByTitle" resultMap="article">
        SELECT article_id,article_author_id,article_title,article_content,
               article_update_time,article_create_time,article_summary,
               article_thumbnail,article_visible,article_deleted,
               category.category_name category_name,
               tag.tag_id tag_id,tag.tag_name tag_name,tag.tag_create_time tag_create_time,
               tag.tag_update_time tag_update_time,tag.tag_deleted tag_deleted
        FROM article,category,tag WHERE article_id IN(SELECT article_id
                                                      FROM article
                                                      <if test="title!=null">WHERE article_title Like '%${title}%'</if>)
                                    AND category.category_id IN (SELECT category_id
                                                                 FROM article_category_ref
                                                                 WHERE article_category_ref.article_id = article.article_id)
                                    AND tag.tag_id IN (SELECT tag_id
                                                       FROM article_tag_ref
                                                       WHERE article_tag_ref.article_id = article.article_id)
                                    AND article_deleted = 0
                                    <if test="isPassed">AND article_visible = 1</if>
        ORDER BY article_id DESC
    </select>

    <delete id="deleteCategoryByArticleId">
        DELETE FROM article_category_ref WHERE article_id = #{articleId}
    </delete>

    <delete id="deleteCollectionByArticleId">
        DELETE FROM collection WHERE article_id = #{articleId}
    </delete>

    <delete id="deleteTagByArticleId">
        DELETE FROM article_tag_ref WHERE article_id = #{articleId}
    </delete>

    <select id="searchCollectionById" resultMap="collection">
        SELECT user_id,article_id,collection_create_time
        FROM collection
        WHERE collection.article_id = #{articleId} AND collection.user_id = #{userId}
    </select>

    <select id="searchScoreById" resultMap="score">
        SELECT score_article_id articleId
        FROM score
        WHERE score.score_article_id = #{articleId} AND score.score_user_id = #{userId}
    </select>

    <select id="searchScoreByUserId" resultType="java.lang.Integer">
        SELECT score_number
        FROM score
        WHERE score_article_id = #{articleId}
        AND score_user_id = #{userId}
    </select>
</mapper>